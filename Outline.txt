ğŸ’¡ Instructions ğŸ’¡

ğŸ”˜ Allow users to create rooms + enter existing rooms
 - Rooms are defined by the .roomname property of messages, so you'll need to filter them somehow.

ğŸ”˜ Display messages retrieved from parse server
ğŸ”˜ Use proper escaping on any user input
ğŸ”˜ Allow users to save new chat messages to the server âœ…

Additional Tasks:
ğŸ”˜ Refresh the displayed messages (either automatically or with a button)
_____________

ğŸ“Œ Current Tasks:
ğŸ”˜ Display all rooms from server
ğŸ”˜ Add new room to server
ğŸ”˜ Add friend upon clicking username
ğŸ”˜ Display all messages sent by friends in bold or with highlight


ğŸ’  MODELS - functionality (where data lives)

ğŸ”¸ Messages
   -

ğŸ”¸ Rooms
   -


ğŸ’  VIEWS - user interface (anything that's rendered on the screen)

ğŸ”¸ FormView
    - initializes after handle is submitted
    - submits a message to the server
    - methods used:
      * Parse.create (posts message to the server)
      * MessagesView.renderMessage (appends message to ___)

ğŸ”¸ MessagesView - Renders Messages
    - renders each message to the DOM
    - methods used:
      * MessageView.render (adds message to message HTML template)

ğŸ”¸ MessageView
    - creates message template in HTML

ğŸ”¸ RoomsView
    - populates the dropdown
    - rerenders messages to chats element
    * initialize
    * render
    * renderRoom
    * addRoom: append room to the select element in DOM
    * change rooms


ğŸ’  CONTROLLER - provides model data to view

ğŸ”¸  App
  * initialize
  * fetch
      - Parse.readAll
      - Iterate through data.results + filter through all received data to get roomnames
  * startSpinner
  * stopSpinner


ğŸ”¸ Parse
  - this is how we interact with data and view
    * create: Saves a message to the server
    * readAll: Gets messages from the server

